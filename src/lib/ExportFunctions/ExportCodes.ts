import { Layer, type Schema, type ExportCodes } from '../Common/types';

//sampleLayers to sampleResult 형태로 변환하는 함수
function toStringJSXElement(layers: Layer[]): string {
	if (layers.length === 0) return 'layers are empty';

	const generatePropsCode = (props: { [key: string]: any }) => {
		const propStrings = Object.keys(props).map((key) => {
			if (key === 'children') return '';
			const value = props[key];
			let keyValue = '';
			if (typeof value === 'object') {
				keyValue = `${key}: ${JSON.stringify(value)}`;
			} else {
				keyValue = `${key}: ${typeof value === 'string' ? `'${value}'` : value}`;
			}

			return keyValue + ',';
		});

		return propStrings.join('');
	};

	const generateComponentCode = (layer: Layer, depth: number = 3): string => {
		const propsCode = generatePropsCode(layer.props);
		const childrenCode: string | undefined =
			layer.children && layer.children.length > 0
				? `${layer.children.map((child) => generateComponentCode(child, depth + 1)).join('')}`
				: undefined;

		// 각 자식 요소를 생성할 때 depth에 따라 탭을 추가합니다.
		const tabs = '\t'.repeat(depth);
		if (layer.props.children) {
			//children을 props에 들고 있다는 건 그 이하 자식 요소가 없다는 것을 의미한다.
			return `${tabs}<Moaui.${layer.type} {...{${propsCode}}}>${layer.props.children}</Moaui.${layer.type}>\n`;
		} else {
			return `${tabs}<Moaui.${layer.type} {...{${propsCode}}}>\n${
				childrenCode ?? ''
			}${tabs}</Moaui.${layer.type}>\n`;
		}
	};

	const result = layers.map((layer) => generateComponentCode(layer)).join('');
	//마지막 줄의 '\n'을 제거한다.
	return result.slice(0, -1);
}

function transformSchemaToExportCodes(schema: Schema): ExportCodes {
	if (!schema.canvas || !schema.layers) {
		console.error('canvas or layers is not defined');
		return {};
	}

	//generate tsx
	let tsx = '';
	if (schema.pythonRaw && schema.pythonSchema) {
		tsx = '';

		return {
			tsx: tsx,
			py: '',
		}
	} else {
		tsx = `/**
		* Generated by Moaui DevTools
		* Created at ${new Date().toLocaleString()}
		*/
	 
	 import React from 'react';
	 import Moaui from '@midasit-dev/moaui';
	 
	 const App = () => {
		 return (
			 <Moaui.Panel variant='box' relative width={${schema.canvas.width}} height={${schema.canvas.height}}>
	 ${toStringJSXElement(schema.layers)}
			 </Moaui.Panel>
		 );
	 }
	 
	 export default App;`;

	 return { tsx: tsx, };
	}
}

export { transformSchemaToExportCodes };
